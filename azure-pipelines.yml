trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nugetFeed: 'nugetfeed'  # Replace with the name of your Azure Artifacts feed

steps:
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'
  inputs:
    nuGetServiceConnections: '$(nugetFeed)'
    includeNuGetOrg: false

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: '3.x'

- task: DotNetCoreCLI@2
  displayName: 'Restore NuGet Packages'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
    feedsToUse: 'config'
    nugetConfigPath: 'NuGet.config'

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: 'build'
    projects: '**/*.sln'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Pack project'
  inputs:
    command: 'pack'
    packagesToPack: 'StringLibrary/StringLibrary.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'PackageVersion'
    includesymbols: true
    includesource: true
    outputDir: '$(Build.ArtifactStagingDirectory)/packages'

- task: NuGetCommand@2
  displayName: 'Push to Azure Artifacts Feed'
  inputs:
    command: 'push'
    feedsToUse: 'select'
    vstsFeed: '$(nugetFeed)'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/packages/*.nupkg'
    includeSymbols: true
    allowPackageConflicts: true
  condition: succeededOrFailed()

- task: PublishPipelineArtifact@1
  displayName: 'Publish Pipeline Artifact'
  inputs:
    artifactName: 'nuget-pipeline'
    targetPath: '$(Build.ArtifactStagingDirectory)/packages'
